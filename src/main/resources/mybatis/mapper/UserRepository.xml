<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sky.team.business.dao.UserDao">
    <!--返回类型-->
    <resultMap id="seletctuser" type="com.sky.team.business.pojo.User">
        <id property="userId" column="userid"></id>
        <result property="userName" column="username"></result>
        <result property="userPassword" column="userpassword"></result>
        <result property="userEmail" column="useremail"></result>
        <result property="userEmailCode" column="useremailcode"></result>
        <result property="userLearnTime" column="userlearntime"></result>
        <result property="userLastTime" column="userlasttime"></result>
        <result property="userIntegrate" column="userintegrate"></result>
        <result property="userDepartment" column="userdepartment"></result>
        <result property="delflag" column="delflag"></result>
        <collection property="role" ofType="com.sky.team.business.pojo.Role">
            <id property="roleId" column="roleid"></id>
            <result property="roleName" column="rolename"></result>
            <collection property="permissionList" ofType="com.sky.team.business.pojo.Permission">
                <id property="permissionId" column="permissionid"></id>
                <result property="permissionName" column="permissionname"></result>
                <result property="permissionznName" column="permissionznname"></result>
            </collection>
        </collection>
    </resultMap>
    <select id="getUser" resultMap="seletctuser">
        SELECT * from user
	left join role on `user`.roleid = role.roleid where `user`.userid=#{param1}
    </select>

    <insert id="registerUser">
        insert into user_register(userid,username,userpassword,useremail,useremailcode,userlasttime) values (#{param1},#{param2},#{param3},#{param4},#{param5},#{param6})
    </insert>

    <!--查询-->
    <resultMap id="registeruser" type="com.sky.team.business.pojo.User">
        <id property="userLastTime" column="userlasttime"></id>
        <result property="userId" column="userid"></result>
        <result property="userName" column="username"></result>
        <result property="userPassword" column="userpassword"></result>
        <result property="userEmail" column="useremail"></result>
        <result property="userEmailCode" column="useremailcode"></result>
    </resultMap>
    <select id="selectRegister" resultMap="registeruser">
        select * from user_register where userid=#{param1} and useremail=#{param2} order by userlasttime DESC  limit 0,1;
    </select>

    <delete id="deleteRegisterUser">
        delete from user_register where userLastTime <![CDATA[ <= ]]> #{param1};
    </delete>
    <insert id="addUser">
        insert  into  user(userid,username, userpassword ,useremail,useremailCode,userdepartment,roleid) values (#{param1},#{param2},#{param3},#{param4},#{param5},#{param6},'2');
    </insert>

    <update id="updateLoginTime">
        update user set user.userlasttime=#{param2} where user.userid=#{param1};
    </update>
    <update id="updatePassword">
        update user set user.userpassword = #{userPassword} where user.userid = #{userId};
    </update>
    <update id="updateUser">
        update user(username,userdepartment) values (#{username},#{userdepartment}) where user.userid={userId}
    </update>

    <!--近期每个用户的活跃度-->
    <select id="countActivity" resultMap="seletctuser">
        select * from user left join on u_course on u_course.u_id = user.userid order by u_course.updatetime desc limit 0,5;
    </select>

    <!--每个部门总人数-->
    <select id="countDepartment" resultType="com.sky.team.business.pojo.CountDepartment">
        select userdepartment,count(1) as countDepartment from user where userdepartment!=NULL or userdepartment!='管理员' GROUP BY  userdepartment
    </select>
    <!--当前注册人数-->

    <select id="countUser" resultType="java.lang.Integer">
        select count(1) from user where delflag='0';
    </select>

</mapper>